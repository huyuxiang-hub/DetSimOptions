Index: include/DetSim0Svc.hh
===================================================================
--- include/DetSim0Svc.hh	(revision 4726)
+++ include/DetSim0Svc.hh	(working copy)
@@ -114,7 +114,7 @@
 
 
 private:
-    std::string m_GdLSAbsLengthMode;
+   // std::string m_GdLSAbsLengthMode;
     std::string m_pmt_optical_model;
     std::string m_LS_optical_model;
 
Index: include/LSExpDetectorConstruction.hh
===================================================================
--- include/LSExpDetectorConstruction.hh	(revision 4726)
+++ include/LSExpDetectorConstruction.hh	(working copy)
@@ -390,11 +390,11 @@
     bool m_isMTmode;
  
   private:
-    std::string m_GdLSAbsLengthMode;
+  //  std::string m_GdLSAbsLengthMode;
     std::string m_pmt_optical_model;
     std::string m_LS_optical_model;
   public:
-     void setGdLSAbsLengthMode(std::string GdLSAbsLengthMode) {m_GdLSAbsLengthMode = GdLSAbsLengthMode ;}
+    // void setGdLSAbsLengthMode(std::string GdLSAbsLengthMode) {m_GdLSAbsLengthMode = GdLSAbsLengthMode ;}
      void setPMTOpticalModel(std::string mode ){ m_pmt_optical_model = mode;}
      void setLSOpticalModel(std::string mode ){m_LS_optical_model = mode ;}
 
Index: src/DetSim0Svc.cc
===================================================================
--- src/DetSim0Svc.cc	(revision 4726)
+++ src/DetSim0Svc.cc	(working copy)
@@ -76,7 +76,7 @@
 
     declProp("OpticksMode", m_opticksMode=0);
     
-    declProp("GdLSAbsLengthMode", m_GdLSAbsLengthMode="old");
+ //   declProp("GdLSAbsLengthMode", m_GdLSAbsLengthMode="old");
     declProp("UsePMTOpticalModel", m_pmt_optical_model = "old");
     declProp("UseLSOpticalModel", m_LS_optical_model = "old");
        
@@ -202,7 +202,7 @@
     }
     dc->setOpticksMode(m_opticksMode);
 
-    dc->setGdLSAbsLengthMode(m_GdLSAbsLengthMode);
+    //dc->setGdLSAbsLengthMode(m_GdLSAbsLengthMode);
     dc->setPMTOpticalModel(m_pmt_optical_model);
     dc->setLSOpticalModel(m_LS_optical_model);
 
Index: src/LSExpDetectorConstruction.cc
===================================================================
--- src/LSExpDetectorConstruction.cc	(revision 4726)
+++ src/LSExpDetectorConstruction.cc	(working copy)
@@ -166,7 +166,7 @@
   m_sjreceiver_fastener_mother = "lTarget";
 
 
-  m_GdLSAbsLengthMode = "old";
+//  m_GdLSAbsLengthMode = "old";
   m_pmt_optical_model = "old";
   m_LS_optical_model = "old";
 
Index: src/LSExpDetectorConstructionMaterial.icc
===================================================================
--- src/LSExpDetectorConstructionMaterial.icc	(revision 4726)
+++ src/LSExpDetectorConstructionMaterial.icc	(working copy)
@@ -172,31 +172,25 @@
                        << G4endl;
             }
             double scale_lsly = 1.0 ;
-            if( st && LS_scales_map.count("LSLY_NewLSModelScale")&& LS_scales_map.count("LSLY_NewPMTModelScale")){
-                if(m_pmt_optical_model == "new"){
-                      scale_lsly *= LS_scales_map["LSLY_NewPMTModelScale"];
-                }
-                
-                if(m_LS_optical_model == "new"){
-                      scale_lsly *= LS_scales_map["LSLY_NewLSModelScale"];
-                }         
-           }
+            if(st && LS_scales_map.count("LSLY_NewPMTModelScale") && m_pmt_optical_model == "new"){
+                scale_lsly *= LS_scales_map["LSLY_NewPMTModelScale"];
+            }
+     
+            if( st && LS_scales_map.count("LSLY_NewLSModelScale") && m_LS_optical_model == "new"){
+                scale_lsly *= LS_scales_map["LSLY_NewLSModelScale"];
+            }
+            
         
-           if(m_GdLSAbsLengthMode == "LAB") // LAB AbsLength used for new LS optical model
+           if(m_LS_optical_model == "new") // LAB AbsLength used for new LS optical model
                {
                  helper_mpt(LSMPT, "ABSLENGTH", mcgt.data(), "Material.LS.ABSLENGTH_v2");
                }
-            else if (m_GdLSAbsLengthMode == "new") // New LS AbsLength
-               { 
-                 LSMPT->AddProperty("ABSLENGTH", GdLSABSEnergy_new, GdLSABSLength_new, 601);
-               }
-            else if (m_GdLSAbsLengthMode == "old") // Old LS AbsLength used for old LS optical model
+            else if (m_LS_optical_model == "old") // Old LS AbsLength used for old LS optical model
                {
                  helper_mpt(LSMPT, "ABSLENGTH", mcgt.data(), "Material.LS.ABSLENGTH_v1",scale_abslength);    
-
                }
             else {
-                    G4cout << "Unknown Type of GdLSAbsLengthMode ! " << G4endl;
+                    G4cout << "Warning: Can't find  LS abslength to register " << G4endl;
                  }
        
          helper_mpt(LSMPT, "RINDEX",                     mcgt.data(), "Material.LS.RINDEX");
